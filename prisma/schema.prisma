// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  is_admin      Boolean    @default(false)
  accounts      Account[]
  sessions      Session[]
  comments      Comment[]
  categories    Category[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id            String    @id @default(cuid())
  created_at    DateTime  @default(now())
  title         String    @unique
  description   String
  is_trending   Boolean   @default(false)
  image         String
  views         Int       @default(0)
  comment       Comment[]
  tags          String[]
  category      Category  @relation(fields: [category_name], references: [name], onDelete: Cascade)
  category_name String
  user          User      @relation(fields: [user_email], references: [email], onDelete: Cascade)
  user_email    String
}

model Comment {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_email], references: [email], onDelete: Cascade)
  user_email String
  comment    String
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id    String
}

model Category {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  name       String   @unique
  user       User     @relation(fields: [user_email], references: [email], onDelete: Cascade)
  user_email String
  products   Post[]
}
